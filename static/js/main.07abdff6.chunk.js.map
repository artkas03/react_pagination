{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pageNumbers","i","push","handleMoveButtons","currentPageNumber","isPrevButtons","prevButton","className","cn","disabled","href","onClick","afterButton","map","pageNum","active","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","page","setPage","startItem","endItem","length","id","onChange","event","newPerPage","target","value","defaultValue","htmlFor","number","slice","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAS1C,IAJK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAwB,GAErBC,EAAI,EAAGA,EAAIJ,EAAeI,GAAK,EACtCD,EAAYE,KAAKD,EAAI,GAGvB,SAASE,EACPC,EACAC,GAEA,OAAIA,GAAiBD,EAAoB,EAChCR,EAAaQ,EAAoB,IAGrCC,GAAiBD,EAAoBP,EACjCD,EAAaQ,EAAoB,GAGnC,EAGT,IAAME,EACJ,oBAAIC,UAAWC,IAAG,YAAa,CAC7BC,SAA0B,IAAhBd,IADZ,SAIE,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBf,EACfgB,QAAS,kBAAMR,EAAkBR,GAAa,IALhD,oBAYEiB,EACJ,oBAAIL,UAAWC,IAAG,YAAa,CAC7BC,SAAUd,IAAgBE,IAD5B,SAIE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAK,QACL,gBAAef,IAAgBE,EAC/Bc,QAAS,kBAAMR,EAAkBR,GAAa,IALhD,oBAYJ,OACE,qBAAIY,UAAU,aAAd,UACGD,EACAN,EAAYa,KAAI,SAAAC,GAAO,OACtB,oBACEP,UAAWC,IAAG,YAAa,CACzBO,OAAQD,IAAYnB,IAFxB,SAME,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAI,WAAMI,GACVH,QAAS,kBAAMf,EAAakB,IAJ9B,SAMGA,KAREA,MAYRF,MCtFDI,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQjB,KAAKkB,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO7B,EAAP,KAAgB8B,EAAhB,KACA,EAAwBD,mBAAS,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACMC,GAAaF,EAAO,GAAK/B,EACzBkC,EAAUD,EAAYjC,EAAUsB,EAAMa,OACxCb,EAAMa,OACNF,EAAYjC,EAOhB,OACE,sBAAKa,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWkB,EADX,mBAC0BE,EAAY,EADtC,cAC6CC,EAD7C,aAIA,sBAAKrB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,SAAU,SAACC,GAAD,OAnBEC,GAmBuBD,EAAME,OAAOC,MAlBxDT,EAAQ,QACRF,EAAWS,GAFb,IAAsBA,GAoBZG,aAAc,EALhB,UAOE,wBAAQD,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MAAO,GACPC,QAASA,EACTC,YAAa8B,EACb7B,aAAc,SAAC0C,GAAD,OAAoBZ,EAAQY,MAE5C,6BACGtB,EAAMuB,MAAMZ,EAAWC,GAASf,KAAI,SAAA2B,GAAI,OACvC,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YExDlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.07abdff6.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (number: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pageNumbers: number[] = [];\n\n  for (let i = 0; i < numberOfPages; i += 1) {\n    pageNumbers.push(i + 1);\n  }\n\n  function handleMoveButtons(\n    currentPageNumber: number,\n    isPrevButtons: boolean,\n  ) {\n    if (isPrevButtons && currentPageNumber > 1) {\n      return onPageChange(currentPageNumber - 1);\n    }\n\n    if (!isPrevButtons && currentPageNumber < numberOfPages) {\n      return onPageChange(currentPageNumber + 1);\n    }\n\n    return 0;\n  }\n\n  const prevButton = (\n    <li className={cn('page-item', {\n      disabled: currentPage === 1,\n    })}\n    >\n      <a\n        data-cy=\"prevLink\"\n        className=\"page-link\"\n        href=\"#prev\"\n        aria-disabled={currentPage === 1}\n        onClick={() => handleMoveButtons(currentPage, true)}\n      >\n        «\n      </a>\n    </li>\n  );\n\n  const afterButton = (\n    <li className={cn('page-item', {\n      disabled: currentPage === numberOfPages,\n    })}\n    >\n      <a\n        data-cy=\"nextLink\"\n        className=\"page-link\"\n        href=\"#next\"\n        aria-disabled={currentPage === numberOfPages}\n        onClick={() => handleMoveButtons(currentPage, false)}\n      >\n        »\n      </a>\n    </li>\n  );\n\n  return (\n    <ul className=\"pagination\">\n      {prevButton}\n      {pageNumbers.map(pageNum => (\n        <li\n          className={cn('page-item', {\n            active: pageNum === currentPage,\n          })}\n          key={pageNum}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNum}`}\n            onClick={() => onPageChange(pageNum)}\n          >\n            {pageNum}\n          </a>\n        </li>\n      ))}\n      {afterButton}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n  const startItem = (page - 1) * perPage;\n  const endItem = startItem + perPage > items.length\n    ? items.length\n    : startItem + perPage;\n\n  function hanlePerPage(newPerPage: number) {\n    setPage(1);\n    setPerPage(newPerPage);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${startItem + 1} - ${endItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => hanlePerPage(+event.target.value)}\n            defaultValue={5}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={(number: number) => setPage(number)}\n      />\n      <ul>\n        {items.slice(startItem, endItem).map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}